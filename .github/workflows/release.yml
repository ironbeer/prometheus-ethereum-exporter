name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - name: Setup Go 1.20
        uses: actions/setup-go@v1
        with:
          go-version: 1.20

      - name: Check out
        uses: actions/checkout@v2
        with:
          path: ./repo

      - name: Check out
        uses: actions/checkout@v2
        with:
          repository: ironbeer/go-web3
          path: ./go-web3

      - name: Get dependencies
        run: go get -v -t -d ./...
        working-directory: ./repo

      - name: Build Binary
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=${{ matrix.arch }} \
            go build -a -o ${{ github.event.repository.name }} .
        working-directory: ./repo

      - name: Compress Binary
        run: zip -j ${{ github.event.repository.name }}_linux_${{ matrix.arch }}.zip ./repo/${{ github.event.repository.name }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.ref_name }}_${{ matrix.arch }}
          path: ${{ github.event.repository.name }}_linux_${{ matrix.arch }}.zip

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ github.ref_name }}_*
          path: artifacts
          merge-multiple: true

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Asset - amd64
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/${{ github.event.repository.name }}_linux_amd64.zip
          asset_name: ${{ github.event.repository.name }}_linux_amd64.zip
          asset_content_type: application/zip

      - name: Upload Asset - arm64
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/${{ github.event.repository.name }}_linux_arm64.zip
          asset_name: ${{ github.event.repository.name }}_linux_arm64.zip
          asset_content_type: application/zip
